import type { GetServerSideProps, InferGetServerSidePropsType, NextPage } from 'next';
import Head from 'next/head';
import { useState } from 'react';
import styles from '../styles/Home.module.css';
import s from '../components/admin/menu/Layout.module.scss';
import { Layout } from '../components/layout/Layout';
import { NavBar } from '../components/layout/NavBar';
import { Login } from '../components/user/Login';
import { CategoriesNav } from '../components/CategoriesNav';
import { ButtonPage } from '../components/buttons/ButtonPage';
import { getPageMenu } from '../lib/request';
import { MenuListItem } from '../components/MenuListItem';
import {
  Menu as GetMenu, MenuItems, LinksType, CategoriesItems,
} from '../types';

const Menu: NextPage = ({ categories, menu }
: InferGetServerSidePropsType<typeof getServerSideProps>) => {
  const { items: itemsMenu, _links: menuLinks } = (menu) as GetMenu;
  const [menuRes, setMenuRes] = useState<GetMenu>(menu);
  const [menuList, setMenuList] = useState<MenuItems[]>(itemsMenu);

  const [errors, setError] = useState<string[]>([]);
  const [editValues, setEditValues] = useState<MenuItems[]>(itemsMenu);

  const [pageLinks, setPageLinks] = useState< LinksType >(menuLinks);

  const pageHandler = async (e: any):Promise<void> => {
    const { value } = e.target;
    if (value === 'next') {
      const res = await
      getPageMenu(`menu?offset=${menuRes.offset + menuRes.limit}&limit=${menuRes.limit}`);
      if (res) {
        const { pageMenu, link, pagesMenu } = res;
        setMenuList(pageMenu);
        setPageLinks(link);
        setMenuRes(pagesMenu);
      }
    }
    if (value === 'prev') {
      const res = await
      getPageMenu(`menu?offset=${Number(menuRes.offset) - menuRes.limit}&limit=${menuRes.limit}`);
      if (res) {
        const { pageMenu, link, pagesMenu } = res;
        setMenuList(pageMenu);
        setPageLinks(link);
        setMenuRes(pagesMenu);
      }
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Menu</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout
        title="Veitingarstaðurinn Góði"
        header={(<NavBar cartItems={0}/>)}
        footer={(
          <Login />
        )}
      >
        <main>
            <ul className={styles.catNav}>
            {categories.items.map((item: CategoriesItems, i:number) => (
              <CategoriesNav key={i} category={item} />
            ))}
            </ul>

            <ul className={styles.menuList}>
              {menuList.map((item:MenuItems, i:number) => (
                <MenuListItem key={i} item={item}/>
              ))}
            </ul>

            <div className={s.layout__menulist__pagebutton}>
              {pageLinks.prev && (
                <ButtonPage value='prev' onClick={pageHandler}>Fyrri síða</ButtonPage>
              )}
              {pageLinks.next && (
                <ButtonPage value='next' onClick={pageHandler}>Næsta síða</ButtonPage>
              )}
            </div>
        </main>
      </Layout>
    </div>
  );
};
export const getServerSideProps : GetServerSideProps = async () => {
  const categoriesRes = await fetch('https://vef2-2022-h1-synilausn.herokuapp.com/categories');
  const categories = await categoriesRes.json();
  const menuRes = await fetch('https://vef2-2022-h1-synilausn.herokuapp.com/menu');
  const menu = await menuRes.json();
  return { props: { categories, menu } };
};

export default Menu;
